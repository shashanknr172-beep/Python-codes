# Tractor Manufacturing and Selling System
# Author: Python Code Hub
# Description: Manage tractor production, stock, and sales efficiently

class Tractor:
    def __init__(self, model_id, name, hp, price, stock):
        self.model_id = model_id
        self.name = name
        self.hp = hp  # Horsepower
        self.price = price
        self.stock = stock

    def __str__(self):
        return f"{self.model_id:<10}{self.name:<20}{self.hp:<10}{self.price:<12}{self.stock:<8}"


class TractorCompany:
    def __init__(self):
        self.tractors = []
        self.sales_records = []

    def add_tractor(self, model_id, name, hp, price, stock):
        self.tractors.append(Tractor(model_id, name, hp, price, stock))
        print(f" Tractor {name} added to inventory.\n")

    def show_inventory(self):
        if not self.tractors:
            print(" No tractors available in stock.\n")
            return
        print("\n===================  TRACTOR INVENTORY ===================")
        print(f"{'Model ID':<10}{'Name':<20}{'HP':<10}{'Price (₹)':<12}{'Stock':<8}")
        print("-" * 60)
        for t in self.tractors:
            print(t)
        print("============================================================\n")

    def manufacture_tractor(self, model_id, count):
        for t in self.tractors:
            if t.model_id == model_id:
                t.stock += count
                print(f" Manufactured {count} new units of {t.name}.")
                print(f" Total stock now: {t.stock}\n")
                return
        print(" Model not found.\n")

    def sell_tractor(self, model_id, buyer_name, quantity):
        for t in self.tractors:
            if t.model_id == model_id:
                if quantity <= t.stock:
                    t.stock -= quantity
                    total_price = t.price * quantity
                    self.sales_records.append({
                        "buyer": buyer_name,
                        "tractor": t.name,
                        "quantity": quantity,
                        "total": total_price
                    })
                    print(f" Sold {quantity} {t.name}(s) to {buyer_name}. Total ₹{total_price}\n")
                else:
                    print(f" Not enough stock! Only {t.stock} units available.\n")
                return
        print(" Model not found.\n")

    def show_sales_report(self):
        if not self.sales_records:
            print(" No sales have been made yet.\n")
            return
        print("\n=================  SALES REPORT =================")
        print(f"{'Buyer':<15}{'Tractor':<20}{'Qty':<8}{'Total (₹)':<12}")
        print("-" * 55)
        total_income = 0
        for s in self.sales_records:
            print(f"{s['buyer']:<15}{s['tractor']:<20}{s['quantity']:<8}{s['total']:<12}")
            total_income += s['total']
        print("---------------------------------------------------")
        print(f"Total Income: ₹{total_income}")
        print("===================================================\n")

    def search_tractor(self, name):
        found = False
        for t in self.tractors:
            if name.lower() in t.name.lower():
                if not found:
                    print(f"\n Search results for '{name}':")
                    print(f"{'Model ID':<10}{'Name':<20}{'HP':<10}{'Price (₹)':<12}{'Stock':<8}")
                    print("-" * 60)
                print(t)
                found = True
        if not found:
            print(f" No tractors found with name '{name}'.\n")
        else:
            print()


def main():
    company = TractorCompany()

    # Preloaded sample tractors
    company.add_tractor("TX101", "Mahindra Arjun", 50, 850000, 10)
    company.add_tractor("TX102", "John Deere 5310", 55, 950000, 8)
    company.add_tractor("TX103", "TAFE SmartTrac", 45, 780000, 12)

    while True:
        print("==========  TRACTOR MANUFACTURING & SALES SYSTEM ==========")
        print("1. Show Inventory")
        print("2. Manufacture Tractor")
        print("3. Sell Tractor")
        print("4. Show Sales Report")
        print("5. Search Tractor")
        print("6. Add New Tractor")
        print("7. Exit")
        choice = input(" Enter your choice: ")

        if choice == "1":
            company.show_inventory()
        elif choice == "2":
            model_id = input("Enter Model ID: ")
            count = int(input("Enter units to manufacture: "))
            company.manufacture_tractor(model_id, count)
        elif choice == "3":
            model_id = input("Enter Model ID: ")
            buyer = input("Enter Buyer Name: ")
            qty = int(input("Enter quantity: "))
            company.sell_tractor(model_id, buyer, qty)
        elif choice == "4":
            company.show_sales_report()
        elif choice == "5":
            name =
